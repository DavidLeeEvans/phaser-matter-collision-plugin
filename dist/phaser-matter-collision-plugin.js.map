{"version":3,"sources":["webpack://PhaserMatterCollisionPlugin/webpack/universalModuleDefinition","webpack://PhaserMatterCollisionPlugin/webpack/bootstrap","webpack://PhaserMatterCollisionPlugin/external {\"root\":\"Phaser\",\"commonjs\":\"phaser\",\"commonjs2\":\"phaser\",\"amd\":\"phaser\"}","webpack://PhaserMatterCollisionPlugin/./logger.js","webpack://PhaserMatterCollisionPlugin/./utils.js","webpack://PhaserMatterCollisionPlugin/./phaser-matter-collision-plugin.js","webpack://PhaserMatterCollisionPlugin/./index.js"],"names":["log","console","warn","error","getRootBody","body","parent","isMatterBody","obj","hasOwnProperty","isPhysicsObject","Phaser","Tilemaps","Tile","warnInvalidObject","logger","scene","pluginManager","events","Events","EventEmitter","collisionStartListeners","Map","collisionEndListeners","collisionActiveListeners","onCollisionStart","onCollisionEvent","bind","onCollisionEnd","onCollisionActive","once","start","destroy","objectA","objectB","callback","context","addOnCollide","removeOnCollideStart","removeOnCollideEnd","removeOnCollideActive","removeOnCollide","clear","removeAllCollideStartListeners","removeAllCollideActiveListeners","removeAllCollideEndListeners","object","removeCollideListenersOf","removeCollideStartListenersOf","removeCollideActiveListenersOf","removeCollideEndListenersOf","map","objects","Array","isArray","forEach","delete","callbacks","remainingCallbacks","filter","includes","cb","target","length","set","objectsA","objectsB","addOnCollideObjectVsObject","a","b","get","push","listenerMap","eventName","event","pairs","pairEventName","eventData","eventDataReversed","isReversed","pair","i","bodyA","bodyB","gameObjectA","gameObject","gameObjectB","tile","emit","size","checkPairAndEmit","call","matter","world","on","off","shutdown","subscribeMatterEvents","removeAllCollideListeners","unsubscribeMatterEvents","undefined","Plugins","ScenePlugin"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA,gD;;;;;;;;;;;;;;ACAA,2CAAe;AACbA,OAAKC,QAAQD,GADA;AAEbE,QAAMD,QAAQC,IAFD;AAGbC,SAAOF,QAAQE;AAHF,CAAf,E;;ACAA;AACA;;AAEA;;;;AAIO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAOA,KAAKC,MAAL,KAAgBD,IAAvB;AAA6BA,WAAOA,KAAKC,MAAZ;AAA7B,GACA,OAAOD,IAAP;AACD;;AAED;;;;AAIO,SAASE,YAAT,CAAsBC,GAAtB,EAA2B;AAChC,SACEA,IAAIC,cAAJ,CAAmB,iBAAnB,KACAD,IAAIC,cAAJ,CAAmB,OAAnB,CADA,IAEAD,IAAIC,cAAJ,CAAmB,MAAnB,CAHF;AAKD;;AAED;;;;;AAKO,SAASC,eAAT,CAAyBF,GAAzB,EAA8B;AACnC,SAAOD,aAAaC,GAAb,KAAqBA,IAAIH,IAAzB,IAAiCG,eAAe,0EAAAG,CAAOC,QAAP,CAAgBC,IAAvE;AACD;;AAED;AACO,SAASC,iBAAT,CAA2BN,GAA3B,EAAgC;AACrCO,EAAA,MAAAA,CAAOb,IAAP,6FAC4FM,GAD5F;AAGD,C;;;;;;;;;;ACtCD;AACA;AACA;;AAEA;;;;;;IAKqB,oD;;;AACnB;;;;;AAKA,iCAAYQ,KAAZ,EAAmBC,aAAnB,EAAkC;AAAA;;AAAA,8IAC1BD,KAD0B,EACnBC,aADmB;;AAGhC,UAAKD,KAAL,GAAaA,KAAb;;AAEA;;;;;;;;;AASA,UAAKE,MAAL,GAAc,IAAI,0EAAAP,CAAOQ,MAAP,CAAcC,YAAlB,EAAd;;AAEA;AACA;AACA,UAAKC,uBAAL,GAA+B,IAAIC,GAAJ,EAA/B;AACA;AACA,UAAKC,qBAAL,GAA6B,IAAID,GAAJ,EAA7B;AACA;AACA,UAAKE,wBAAL,GAAgC,IAAIF,GAAJ,EAAhC;;AAEA;;;;;AAKA,UAAKG,gBAAL,GAAwB,MAAKC,gBAAL,CAAsBC,IAAtB,QAEtB,MAAKN,uBAFiB,EAGtB,gBAHsB,CAAxB;;AAMA;;;;;AAKA,UAAKO,cAAL,GAAsB,MAAKF,gBAAL,CAAsBC,IAAtB,QAEpB,MAAKJ,qBAFe,EAGpB,cAHoB,CAAtB;;AAMA;;;;;AAKA,UAAKM,iBAAL,GAAyB,MAAKH,gBAAL,CAAsBC,IAAtB,QAEvB,MAAKH,wBAFkB,EAGvB,iBAHuB,CAAzB;;AAMA,UAAKR,KAAL,CAAWE,MAAX,CAAkBY,IAAlB,CAAuB,OAAvB,EAAgC,MAAKC,KAArC;AACA,UAAKf,KAAL,CAAWE,MAAX,CAAkBY,IAAlB,CAAuB,SAAvB,EAAkC,MAAKE,OAAvC;AA1DgC;AA2DjC;;AAED;;;;;;;;;;;;;;;;;;;;wCAgBgE;AAAA,qFAAJ,EAAI;AAAA,UAA5CC,OAA4C,QAA5CA,OAA4C;AAAA,UAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,UAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,UAAhBC,OAAgB,QAAhBA,OAAgB;;AAC9D,WAAKC,YAAL,CAAkB,KAAKhB,uBAAvB,EAAgDY,OAAhD,EAAyDC,OAAzD,EAAkEC,QAAlE,EAA4EC,OAA5E;AACA,aAAO,KAAKE,oBAAL,CAA0BX,IAA1B,CAA+B,IAA/B,EAAqC,EAAEM,gBAAF,EAAWC,gBAAX,EAAoBC,kBAApB,EAA8BC,gBAA9B,EAArC,CAAP;AACD;;AAED;;;;;;;sCAI8D;AAAA,sFAAJ,EAAI;AAAA,UAA5CH,OAA4C,SAA5CA,OAA4C;AAAA,UAAnCC,OAAmC,SAAnCA,OAAmC;AAAA,UAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,UAAhBC,OAAgB,SAAhBA,OAAgB;;AAC5D,WAAKC,YAAL,CAAkB,KAAKd,qBAAvB,EAA8CU,OAA9C,EAAuDC,OAAvD,EAAgEC,QAAhE,EAA0EC,OAA1E;AACA,aAAO,KAAKG,kBAAL,CAAwBZ,IAAxB,CAA6B,IAA7B,EAAmC,EAAEM,gBAAF,EAAWC,gBAAX,EAAoBC,kBAApB,EAA8BC,gBAA9B,EAAnC,CAAP;AACD;;AAED;;;;;;;yCAIiE;AAAA,sFAAJ,EAAI;AAAA,UAA5CH,OAA4C,SAA5CA,OAA4C;AAAA,UAAnCC,OAAmC,SAAnCA,OAAmC;AAAA,UAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,UAAhBC,OAAgB,SAAhBA,OAAgB;;AAC/D,WAAKC,YAAL,CAAkB,KAAKb,wBAAvB,EAAiDS,OAAjD,EAA0DC,OAA1D,EAAmEC,QAAnE,EAA6EC,OAA7E;AACA,aAAO,KAAKI,qBAAL,CAA2Bb,IAA3B,CAAgC,IAAhC,EAAsC,EAAEM,gBAAF,EAAWC,gBAAX,EAAoBC,kBAApB,EAA8BC,gBAA9B,EAAtC,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;2CAemE;AAAA,sFAAJ,EAAI;AAAA,UAA5CH,OAA4C,SAA5CA,OAA4C;AAAA,UAAnCC,OAAmC,SAAnCA,OAAmC;AAAA,UAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,UAAhBC,OAAgB,SAAhBA,OAAgB;;AACjE,WAAKK,eAAL,CAAqB,KAAKpB,uBAA1B,EAAmDY,OAAnD,EAA4DC,OAA5D,EAAqEC,QAArE,EAA+EC,OAA/E;AACD;;AAED;;;;;;;yCAIiE;AAAA,sFAAJ,EAAI;AAAA,UAA5CH,OAA4C,SAA5CA,OAA4C;AAAA,UAAnCC,OAAmC,SAAnCA,OAAmC;AAAA,UAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,UAAhBC,OAAgB,SAAhBA,OAAgB;;AAC/D,WAAKK,eAAL,CAAqB,KAAKlB,qBAA1B,EAAiDU,OAAjD,EAA0DC,OAA1D,EAAmEC,QAAnE,EAA6EC,OAA7E;AACD;;AAED;;;;;;;4CAIoE;AAAA,sFAAJ,EAAI;AAAA,UAA5CH,OAA4C,SAA5CA,OAA4C;AAAA,UAAnCC,OAAmC,SAAnCA,OAAmC;AAAA,UAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,UAAhBC,OAAgB,SAAhBA,OAAgB;;AAClE,WAAKK,eAAL,CAAqB,KAAKjB,wBAA1B,EAAoDS,OAApD,EAA6DC,OAA7D,EAAsEC,QAAtE,EAAgFC,OAAhF;AACD;;AAED;;;;;;qDAGiC;AAC/B,WAAKf,uBAAL,CAA6BqB,KAA7B;AACD;AACD;;;;;;sDAGkC;AAChC,WAAKlB,wBAAL,CAA8BkB,KAA9B;AACD;AACD;;;;;;mDAG+B;AAC7B,WAAKnB,qBAAL,CAA2BmB,KAA3B;AACD;AACD;;;;;;;gDAI4B;AAC1B,WAAKC,8BAAL;AACA,WAAKC,+BAAL;AACA,WAAKC,4BAAL;AACD;;AAED;;;;;;;kDAI8BC,M,EAAQ;AACpC,WAAKC,wBAAL,CAA8B,KAAK1B,uBAAnC,EAA4DyB,MAA5D;AACD;;AAED;;;;;;;mDAI+BA,M,EAAQ;AACrC,WAAKC,wBAAL,CAA8B,KAAKvB,wBAAnC,EAA6DsB,MAA7D;AACD;;AAED;;;;;;;gDAI4BA,M,EAAQ;AAClC,WAAKC,wBAAL,CAA8B,KAAKxB,qBAAnC,EAA0DuB,MAA1D;AACD;;AAED;;;;;;;;gDAK4BA,M,EAAQ;AAClC,WAAKE,6BAAL,CAAmCF,MAAnC;AACA,WAAKG,8BAAL,CAAoCH,MAApC;AACA,WAAKI,2BAAL,CAAiCJ,MAAjC;AACD;;AAED;;;;6CACyBK,G,EAAKL,M,EAAQ;AACpC,UAAMM,UAAUC,MAAMC,OAAN,CAAcR,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAAjD;AACA;AACAM,cAAQG,OAAR,CAAgB;AAAA,eAAOJ,IAAIK,MAAJ,CAAWhD,GAAX,CAAP;AAAA,OAAhB;AACA;AACA2C,UAAII,OAAJ,CAAY,UAACE,SAAD,EAAYxB,OAAZ,EAAwB;AAClC,YAAMyB,qBAAqBD,UAAUE,MAAV,CAAiB;AAAA,iBAAM,CAACP,QAAQQ,QAAR,CAAiBC,GAAGC,MAApB,CAAP;AAAA,SAAjB,CAA3B;AACA,YAAIJ,mBAAmBK,MAAnB,GAA4B,CAAhC,EAAmCZ,IAAIa,GAAJ,CAAQ/B,OAAR,EAAiByB,kBAAjB,EAAnC,KACKP,IAAIK,MAAJ,CAAWvB,OAAX;AACN,OAJD;AAKD;;AAED;;;;iCACakB,G,EAAKlB,O,EAASC,O,EAASC,Q,EAAUC,O,EAAS;AAAA;;AACrD,UAAI,CAACD,QAAD,IAAa,OAAOA,QAAP,KAAoB,UAArC,EAAiD;AAC/CjC,yDAA+CiC,QAA/C;AACA;AACD;AACD,UAAM8B,WAAWZ,MAAMC,OAAN,CAAcrB,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAApD;AACA,UAAMiC,WAAWb,MAAMC,OAAN,CAAcpB,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAApD;AACA+B,eAASV,OAAT,CAAiB,aAAK;AACpBW,iBAASX,OAAT,CAAiB,aAAK;AACpB,iBAAKY,0BAAL,CAAgChB,GAAhC,EAAqCiB,CAArC,EAAwCC,CAAxC,EAA2ClC,QAA3C,EAAqDC,OAArD;AACD,SAFD;AAGD,OAJD;AAKD;;AAED;;;;oCACgBe,G,EAAKlB,O,EAASC,O,EAASC,Q,EAAUC,O,EAAS;AACxD,UAAM6B,WAAWZ,MAAMC,OAAN,CAAcW,QAAd,IAA0BhC,OAA1B,GAAoC,CAACA,OAAD,CAArD;AACA,UAAMiC,WAAWb,MAAMC,OAAN,CAAcY,QAAd,IAA0BhC,OAA1B,GAAoC,CAACA,OAAD,CAArD;AACA+B,eAASV,OAAT,CAAiB,aAAK;AACpB,YAAME,YAAYN,IAAImB,GAAJ,CAAQF,CAAR,KAAc,EAAhC;AACA,YAAMV,qBAAqBD,UAAUE,MAAV,CACzB;AAAA,iBAAM,EAAEO,SAASN,QAAT,CAAkBC,GAAGC,MAArB,KAAgCD,GAAG1B,QAAH,KAAgBA,QAAhD,IAA4D0B,GAAGzB,OAAH,KAAeA,OAA7E,CAAN;AAAA,SADyB,CAA3B;AAGA,YAAIsB,mBAAmBK,MAAnB,GAA4B,CAAhC,EAAmCZ,IAAIa,GAAJ,CAAQI,CAAR,EAAWV,kBAAX,EAAnC,KACKP,IAAIK,MAAJ,CAAWY,CAAX;AACN,OAPD;AAQD;;AAED;;;;+CAC2BjB,G,EAAKlB,O,EAASC,O,EAASC,Q,EAAUC,O,EAAS;AACnE;AACA,UAAI,CAACH,OAAD,IAAY,CAAC,eAAAvB,CAAgBuB,OAAhB,CAAjB,EAA2C;AACzCnB,QAAA,iBAAAA,CAAkBmB,OAAlB;AACA;AACD;;AAED;AACA,UAAIC,WAAW,CAAC,eAAAxB,CAAgBwB,OAAhB,CAAhB,EAA0C;AACxCpB,QAAA,iBAAAA,CAAkBmB,OAAlB;AACA;AACD;;AAED,UAAMwB,YAAYN,IAAImB,GAAJ,CAAQrC,OAAR,KAAoB,EAAtC;AACAwB,gBAAUc,IAAV,CAAe,EAAET,QAAQ5B,OAAV,EAAmBC,kBAAnB,EAA6BC,gBAA7B,EAAf;AACAe,UAAIa,GAAJ,CAAQ/B,OAAR,EAAiBwB,SAAjB;AACD;;AAED;;;;;;;qCAIiBe,W,EAAaC,S,EAAWC,K,EAAO;AAAA;;AAC9C,UAAMC,QAAQD,MAAMC,KAApB;AACA,UAAMC,gBAAgB,SAASH,SAA/B;AACA,UAAMI,YAAY,EAAlB;AACA,UAAMC,oBAAoB,EAAEC,YAAY,IAAd,EAA1B;;AAEAJ,YAAMxB,GAAN,CAAU,UAAC6B,IAAD,EAAOC,CAAP,EAAa;AAAA,YACbC,KADa,GACIF,IADJ,CACbE,KADa;AAAA,YACNC,KADM,GACIH,IADJ,CACNG,KADM;;;AAGrB,YAAIC,cAAc,WAAAhF,CAAY8E,KAAZ,EAAmBG,UAArC;AACA,YAAIC,cAAc,WAAAlF,CAAY+E,KAAZ,EAAmBE,UAArC;;AAEA;AACA;AACA,YAAID,eAAeA,YAAYG,IAA/B,EAAqCH,cAAcA,YAAYG,IAA1B;AACrC,YAAID,eAAeA,YAAYC,IAA/B,EAAqCD,cAAcA,YAAYC,IAA1B;;AAErCZ,cAAMM,CAAN,EAASG,WAAT,GAAuBA,WAAvB;AACAT,cAAMM,CAAN,EAASK,WAAT,GAAuBA,WAAvB;;AAEAT,kBAAUK,KAAV,GAAkBA,KAAlB;AACAL,kBAAUM,KAAV,GAAkBA,KAAlB;AACAN,kBAAUO,WAAV,GAAwBA,WAAxB;AACAP,kBAAUS,WAAV,GAAwBA,WAAxB;AACAT,kBAAUG,IAAV,GAAiBA,IAAjB;;AAEA,eAAK9D,MAAL,CAAYsE,IAAZ,CAAiBZ,aAAjB,EAAgCC,SAAhC;;AAEA,YAAIL,YAAYiB,IAAhB,EAAsB;AACpBX,4BAAkBK,KAAlB,GAA0BD,KAA1B;AACAJ,4BAAkBI,KAAlB,GAA0BC,KAA1B;AACAL,4BAAkBQ,WAAlB,GAAgCF,WAAhC;AACAN,4BAAkBM,WAAlB,GAAgCE,WAAhC;AACAR,4BAAkBE,IAAlB,GAAyBA,IAAzB;;AAEA,iBAAKU,gBAAL,CAAsBlB,WAAtB,EAAmCU,KAAnC,EAA0CC,KAA1C,EAAiDG,WAAjD,EAA8DT,SAA9D;AACA,iBAAKa,gBAAL,CAAsBlB,WAAtB,EAAmCW,KAAnC,EAA0CD,KAA1C,EAAiDE,WAAjD,EAA8DN,iBAA9D;;AAEA,cAAIM,WAAJ,EAAiB;AACf,mBAAKM,gBAAL,CAAsBlB,WAAtB,EAAmCY,WAAnC,EAAgDD,KAAhD,EAAuDG,WAAvD,EAAoET,SAApE;AACD;AACD,cAAIS,WAAJ,EAAiB;AACf,mBAAKI,gBAAL,CAAsBlB,WAAtB,EAAmCc,WAAnC,EAAgDJ,KAAhD,EAAuDE,WAAvD,EAAoEN,iBAApE;AACD;AACF;AACF,OAvCD;;AAyCA,WAAK5D,MAAL,CAAYsE,IAAZ,CAAiBf,SAAjB,EAA4BC,KAA5B;AACD;;AAED;;;;qCACiBvB,G,EAAKlB,O,EAASkD,K,EAAOG,W,EAAaT,S,EAAW;AAC5D,UAAMpB,YAAYN,IAAImB,GAAJ,CAAQrC,OAAR,CAAlB;AACA,UAAIwB,SAAJ,EAAe;AACbA,kBAAUF,OAAV,CAAkB,iBAAmC;AAAA,cAAhCO,MAAgC,SAAhCA,MAAgC;AAAA,cAAxB3B,QAAwB,SAAxBA,QAAwB;AAAA,cAAdC,OAAc,SAAdA,OAAc;;AACnD,cAAI,CAAC0B,MAAD,IAAWA,WAAWqB,KAAtB,IAA+BrB,WAAWwB,WAA9C,EAA2D;AACzDnD,qBAASwD,IAAT,CAAcvD,OAAd,EAAuByC,SAAvB;AACD;AACF,SAJD;AAKD;AACF;;;4CAEuB;AACtB,UAAMe,SAAS,KAAK5E,KAAL,CAAW4E,MAA1B;AACA,UAAI,CAACA,MAAD,IAAW,CAACA,OAAOC,KAAvB,EAA8B;AAC5B9E,QAAA,MAAAA,CAAOb,IAAP,CAAY,yBAAZ;AACA;AACD;AACD0F,aAAOC,KAAP,CAAaC,EAAb,CAAgB,gBAAhB,EAAkC,KAAKrE,gBAAvC;AACAmE,aAAOC,KAAP,CAAaC,EAAb,CAAgB,iBAAhB,EAAmC,KAAKjE,iBAAxC;AACA+D,aAAOC,KAAP,CAAaC,EAAb,CAAgB,cAAhB,EAAgC,KAAKlE,cAArC;AACD;;;8CAEyB;AACxB;AACA;AACA,UAAMgE,SAAS,KAAK5E,KAAL,CAAW4E,MAA1B;AACA,UAAI,CAACA,MAAD,IAAW,CAACA,OAAOC,KAAvB,EAA8B;AAC9BD,aAAOC,KAAP,CAAaE,GAAb,CAAiB,gBAAjB,EAAmC,KAAKtE,gBAAxC;AACAmE,aAAOC,KAAP,CAAaE,GAAb,CAAiB,iBAAjB,EAAoC,KAAKlE,iBAAzC;AACA+D,aAAOC,KAAP,CAAaE,GAAb,CAAiB,cAAjB,EAAiC,KAAKnE,cAAtC;AACD;;;4BAEO;AACN;AACA,WAAKZ,KAAL,CAAWE,MAAX,CAAkB6E,GAAlB,CAAsB,UAAtB,EAAkC,KAAKC,QAAvC,EAAiD,IAAjD;AACA,WAAKhF,KAAL,CAAWE,MAAX,CAAkB4E,EAAlB,CAAqB,UAArB,EAAiC,KAAKE,QAAtC,EAAgD,IAAhD;AACA,WAAKC,qBAAL;AACD;;;+BAEU;AACT,WAAKC,yBAAL;AACA,WAAKC,uBAAL;AACA;AACA,WAAKnF,KAAL,CAAWE,MAAX,CAAkBY,IAAlB,CAAuB,OAAvB,EAAgC,KAAKC,KAArC,EAA4C,IAA5C;AACD;;;8BAES;AACR,WAAKf,KAAL,CAAWE,MAAX,CAAkB6E,GAAlB,CAAsB,OAAtB,EAA+B,KAAKhE,KAApC,EAA2C,IAA3C;AACA,WAAKf,KAAL,CAAWE,MAAX,CAAkB6E,GAAlB,CAAsB,UAAtB,EAAkC,KAAKC,QAAvC,EAAiD,IAAjD;AACA,WAAKE,yBAAL;AACA,WAAKC,uBAAL;AACA,WAAKnF,KAAL,GAAaoF,SAAb;AACD;;;;EApXgD,0EAAAzF,CAAO0F,OAAP,CAAeC,W;;AAuXlE;;;;;;AAMA;;;;;AAKA;;;;;;;;;;AAUA;;;;;;;;;;AAUA;;;;;;;;;;AAUA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;mEAxbqB,oD;;ACTrB;;AAEA,2EAAe,8BAAf,E","file":"phaser-matter-collision-plugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"phaser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"phaser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhaserMatterCollisionPlugin\"] = factory(require(\"phaser\"));\n\telse\n\t\troot[\"PhaserMatterCollisionPlugin\"] = factory(root[\"Phaser\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","export default {\r\n  log: console.log,\r\n  warn: console.warn,\r\n  error: console.error\r\n};\r\n","import Phaser from \"phaser\";\r\nimport logger from \"./logger\";\r\n\r\n/**\r\n * Get the root body of a compound Matter body\r\n * @private\r\n */\r\nexport function getRootBody(body) {\r\n  while (body.parent !== body) body = body.parent;\r\n  return body;\r\n}\r\n\r\n/**\r\n * Duck type to check if the given object is a Matter body (because there isn't a prototype)\r\n * @private\r\n */\r\nexport function isMatterBody(obj) {\r\n  return (\r\n    obj.hasOwnProperty(\"collisionFilter\") &&\r\n    obj.hasOwnProperty(\"parts\") &&\r\n    obj.hasOwnProperty(\"slop\")\r\n  );\r\n}\r\n\r\n/**\r\n * Check if object is an acceptable physical object for this plugin - a Matter Body, a tile, or an\r\n * object with a body property\r\n * @private\r\n */\r\nexport function isPhysicsObject(obj) {\r\n  return isMatterBody(obj) || obj.body || obj instanceof Phaser.Tilemaps.Tile;\r\n}\r\n\r\n/** @private */\r\nexport function warnInvalidObject(obj) {\r\n  logger.warn(\r\n    `Expected a Matter body, Tile or an object with a body property, but instead, recieved: ${obj}`\r\n  );\r\n}\r\n","import Phaser from \"phaser\";\r\nimport { getRootBody, isPhysicsObject, warnInvalidObject } from \"./utils\";\r\nimport logger from \"./logger\";\r\n\r\n/**\r\n * @export\r\n * @class MatterCollisionPlugin\r\n * @extends {Phaser.Plugins.ScenePlugin}\r\n */\r\nexport default class MatterCollisionPlugin extends Phaser.Plugins.ScenePlugin {\r\n  /**\r\n   * Creates an instance of MatterCollisionPlugin.\r\n   * @param {Phaser.Scene} scene\r\n   * @param {Phaser.Plugins.PluginManager} pluginManager\r\n   */\r\n  constructor(scene, pluginManager) {\r\n    super(scene, pluginManager);\r\n\r\n    this.scene = scene;\r\n\r\n    /**\r\n     * @type {Phaser.Events.EventEmitter}\r\n     * @emits {collisionstart}\r\n     * @emits {collisionactive}\r\n     * @emits {collisionend}\r\n     * @emits {paircollisionstart}\r\n     * @emits {paircollisionactive}\r\n     * @emits {paircollisionend}\r\n     */\r\n    this.events = new Phaser.Events.EventEmitter();\r\n\r\n    // Maps from objectA => {target?, callback, context?}\r\n    /** @private */\r\n    this.collisionStartListeners = new Map();\r\n    /** @private */\r\n    this.collisionEndListeners = new Map();\r\n    /** @private */\r\n    this.collisionActiveListeners = new Map();\r\n\r\n    /**\r\n     * @fires collisionstart\r\n     * @fires paircollisionstart\r\n     * @private\r\n     */\r\n    this.onCollisionStart = this.onCollisionEvent.bind(\r\n      this,\r\n      this.collisionStartListeners,\r\n      \"collisionstart\"\r\n    );\r\n\r\n    /**\r\n     * @fires collisionend\r\n     * @fires paircollisionend\r\n     * @private\r\n     */\r\n    this.onCollisionEnd = this.onCollisionEvent.bind(\r\n      this,\r\n      this.collisionEndListeners,\r\n      \"collisionend\"\r\n    );\r\n\r\n    /**\r\n     * @fires collisionactive\r\n     * @fires paircollisionactive\r\n     * @private\r\n     */\r\n    this.onCollisionActive = this.onCollisionEvent.bind(\r\n      this,\r\n      this.collisionActiveListeners,\r\n      \"collisionactive\"\r\n    );\r\n\r\n    this.scene.events.once(\"start\", this.start, this);\r\n    this.scene.events.once(\"destroy\", this.destroy, this);\r\n  }\r\n\r\n  /**\r\n   * Add a listener for collidestart events between objectA and objectB. The collidestart event is\r\n   * fired by Matter when two bodies start colliding within a tick of the engine. If objectB is\r\n   * omitted, any collisions with objectA will be passed along to the listener. See\r\n   * {@link paircollisionstart} for information on callback parameters.\r\n   *\r\n   * @param {object} options\r\n   * @param {PhysicsObject|ObjectWithBody} options.objectA - The first object to watch for in\r\n   * colliding pairs.\r\n   * @param {PhysicsObject|ObjectWithBody} [options.objectB] - Optional, the second object to watch\r\n   * for in colliding pairs. If not defined, all collisions with objectA will trigger the callback\r\n   * @param {function} options.callback - The function to be invoked on collision\r\n   * @param {any} [options.context] - The context to apply when invoking the callback.\r\n   * @returns {function} A function that can be invoked to unsubscribe the listener that was just\r\n   * added.\r\n   */\r\n  addOnCollideStart({ objectA, objectB, callback, context } = {}) {\r\n    this.addOnCollide(this.collisionStartListeners, objectA, objectB, callback, context);\r\n    return this.removeOnCollideStart.bind(this, { objectA, objectB, callback, context });\r\n  }\r\n\r\n  /**\r\n   * This method mirrors {@link MatterCollisionPlugin#addOnCollideStart}\r\n   * @param {object} options\r\n   */\r\n  addOnCollideEnd({ objectA, objectB, callback, context } = {}) {\r\n    this.addOnCollide(this.collisionEndListeners, objectA, objectB, callback, context);\r\n    return this.removeOnCollideEnd.bind(this, { objectA, objectB, callback, context });\r\n  }\r\n\r\n  /**\r\n   * This method mirrors {@link MatterCollisionPlugin#addOnCollideStart}\r\n   * @param {object} options\r\n   */\r\n  addOnCollideActive({ objectA, objectB, callback, context } = {}) {\r\n    this.addOnCollide(this.collisionActiveListeners, objectA, objectB, callback, context);\r\n    return this.removeOnCollideActive.bind(this, { objectA, objectB, callback, context });\r\n  }\r\n\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideStart that match the given options object\r\n   * parameter exactly. I.e. this will only remove the listener if the listener was added via\r\n   * addOnCollideStart with the same parameters.\r\n   *\r\n   * @param {object} options\r\n   * @param {PhysicsObject|ObjectWithBody} options.objectA - The first object to watch for in\r\n   * colliding pairs.\r\n   * @param {PhysicsObject|ObjectWithBody} options.objectB - the second object to watch for in\r\n   * colliding pairs. If not defined, all collisions with objectA will trigger the callback\r\n   * @param {function} options.callback - The function to be invoked on collision\r\n   * @param {[any]} options.context - The context to apply when invoking the callback.\r\n   * @returns {function} A function that can be invoked to unsubscribe the listener that was just\r\n   * added.\r\n   */\r\n  removeOnCollideStart({ objectA, objectB, callback, context } = {}) {\r\n    this.removeOnCollide(this.collisionStartListeners, objectA, objectB, callback, context);\r\n  }\r\n\r\n  /**\r\n   * This method mirrors {@link MatterCollisionPlugin#removeOnCollideStart}\r\n   * @param {object} options\r\n   */\r\n  removeOnCollideEnd({ objectA, objectB, callback, context } = {}) {\r\n    this.removeOnCollide(this.collisionEndListeners, objectA, objectB, callback, context);\r\n  }\r\n\r\n  /**\r\n   * This method mirrors {@link MatterCollisionPlugin#removeOnCollideStart}\r\n   * @param {object} options\r\n   */\r\n  removeOnCollideActive({ objectA, objectB, callback, context } = {}) {\r\n    this.removeOnCollide(this.collisionActiveListeners, objectA, objectB, callback, context);\r\n  }\r\n\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideStart.\r\n   */\r\n  removeAllCollideStartListeners() {\r\n    this.collisionStartListeners.clear();\r\n  }\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideActive.\r\n   */\r\n  removeAllCollideActiveListeners() {\r\n    this.collisionActiveListeners.clear();\r\n  }\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideEnd.\r\n   */\r\n  removeAllCollideEndListeners() {\r\n    this.collisionEndListeners.clear();\r\n  }\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideStart, addOnCollideActive or\r\n   * addOnCollideEnd.\r\n   */\r\n  removeAllCollideListeners() {\r\n    this.removeAllCollideStartListeners();\r\n    this.removeAllCollideActiveListeners();\r\n    this.removeAllCollideEndListeners();\r\n  }\r\n\r\n  /**\r\n   * Remove addOnCollideStart listeners where the given object(s) was involved.\r\n   * @param {object[]|object} object - An object or array of objects\r\n   */\r\n  removeCollideStartListenersOf(object) {\r\n    this.removeCollideListenersOf(this.collisionStartListeners, object);\r\n  }\r\n\r\n  /**\r\n   * Remove addOnCollideActive listeners where the given object(s) was involved.\r\n   * @param {object[]|object} object - An object or array of objects\r\n   */\r\n  removeCollideActiveListenersOf(object) {\r\n    this.removeCollideListenersOf(this.collisionActiveListeners, object);\r\n  }\r\n\r\n  /**\r\n   * Remove addOnCollideEnd listeners where the given object(s) was involved.\r\n   * @param {object[]|object} object - An object or array of objects\r\n   */\r\n  removeCollideEndListenersOf(object) {\r\n    this.removeCollideListenersOf(this.collisionEndListeners, object);\r\n  }\r\n\r\n  /**\r\n   * Remove addOnCollideStart, addOnCollideActive & addOnCollideEnd listeners where the given\r\n   * object(s) was involved.\r\n   * @param {object[]|object} object - An object or array of objects\r\n   */\r\n  removeAllCollideListenersOf(object) {\r\n    this.removeCollideStartListenersOf(object);\r\n    this.removeCollideActiveListenersOf(object);\r\n    this.removeCollideEndListenersOf(object);\r\n  }\r\n\r\n  /** @private */\r\n  removeCollideListenersOf(map, object) {\r\n    const objects = Array.isArray(object) ? object : [object];\r\n    // Remove all places where the object is ObjectA in the collision pair\r\n    objects.forEach(obj => map.delete(obj));\r\n    // Remove all places where the object is ObjectB in the collision pair\r\n    map.forEach((callbacks, objectA) => {\r\n      const remainingCallbacks = callbacks.filter(cb => !objects.includes(cb.target));\r\n      if (remainingCallbacks.length > 0) map.set(objectA, remainingCallbacks);\r\n      else map.delete(objectA);\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  addOnCollide(map, objectA, objectB, callback, context) {\r\n    if (!callback || typeof callback !== \"function\") {\r\n      warn(`No valid callback specified. Received: ${callback}`);\r\n      return;\r\n    }\r\n    const objectsA = Array.isArray(objectA) ? objectA : [objectA];\r\n    const objectsB = Array.isArray(objectB) ? objectB : [objectB];\r\n    objectsA.forEach(a => {\r\n      objectsB.forEach(b => {\r\n        this.addOnCollideObjectVsObject(map, a, b, callback, context);\r\n      });\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  removeOnCollide(map, objectA, objectB, callback, context) {\r\n    const objectsA = Array.isArray(objectsA) ? objectA : [objectA];\r\n    const objectsB = Array.isArray(objectsB) ? objectB : [objectB];\r\n    objectsA.forEach(a => {\r\n      const callbacks = map.get(a) || [];\r\n      const remainingCallbacks = callbacks.filter(\r\n        cb => !(objectsB.includes(cb.target) && cb.callback === callback && cb.context === context)\r\n      );\r\n      if (remainingCallbacks.length > 0) map.set(a, remainingCallbacks);\r\n      else map.delete(a);\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  addOnCollideObjectVsObject(map, objectA, objectB, callback, context) {\r\n    // Can't do anything if the first object is not defined or invalid\r\n    if (!objectA || !isPhysicsObject(objectA)) {\r\n      warnInvalidObject(objectA);\r\n      return;\r\n    }\r\n\r\n    // The second object can be undefined or a valid body\r\n    if (objectB && !isPhysicsObject(objectB)) {\r\n      warnInvalidObject(objectA);\r\n      return;\r\n    }\r\n\r\n    const callbacks = map.get(objectA) || [];\r\n    callbacks.push({ target: objectB, callback, context });\r\n    map.set(objectA, callbacks);\r\n  }\r\n\r\n  /**\r\n   * Reusable handler for collisionstart, collisionend, collisionactive.\r\n   * @private\r\n   * */\r\n  onCollisionEvent(listenerMap, eventName, event) {\r\n    const pairs = event.pairs;\r\n    const pairEventName = \"pair\" + eventName;\r\n    const eventData = {};\r\n    const eventDataReversed = { isReversed: true };\r\n\r\n    pairs.map((pair, i) => {\r\n      const { bodyA, bodyB } = pair;\r\n\r\n      let gameObjectA = getRootBody(bodyA).gameObject;\r\n      let gameObjectB = getRootBody(bodyB).gameObject;\r\n\r\n      // Special case for tiles, where it's more useful to have a reference to the Tile object not\r\n      // the TileBody. This is hot code, so use a property check instead of instanceof.\r\n      if (gameObjectA && gameObjectA.tile) gameObjectA = gameObjectA.tile;\r\n      if (gameObjectB && gameObjectB.tile) gameObjectB = gameObjectB.tile;\r\n\r\n      pairs[i].gameObjectA = gameObjectA;\r\n      pairs[i].gameObjectB = gameObjectB;\r\n\r\n      eventData.bodyA = bodyA;\r\n      eventData.bodyB = bodyB;\r\n      eventData.gameObjectA = gameObjectA;\r\n      eventData.gameObjectB = gameObjectB;\r\n      eventData.pair = pair;\r\n\r\n      this.events.emit(pairEventName, eventData);\r\n\r\n      if (listenerMap.size) {\r\n        eventDataReversed.bodyB = bodyA;\r\n        eventDataReversed.bodyA = bodyB;\r\n        eventDataReversed.gameObjectB = gameObjectA;\r\n        eventDataReversed.gameObjectA = gameObjectB;\r\n        eventDataReversed.pair = pair;\r\n\r\n        this.checkPairAndEmit(listenerMap, bodyA, bodyB, gameObjectB, eventData);\r\n        this.checkPairAndEmit(listenerMap, bodyB, bodyA, gameObjectA, eventDataReversed);\r\n\r\n        if (gameObjectA) {\r\n          this.checkPairAndEmit(listenerMap, gameObjectA, bodyB, gameObjectB, eventData);\r\n        }\r\n        if (gameObjectB) {\r\n          this.checkPairAndEmit(listenerMap, gameObjectB, bodyA, gameObjectA, eventDataReversed);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.events.emit(eventName, event);\r\n  }\r\n\r\n  /** @private */\r\n  checkPairAndEmit(map, objectA, bodyB, gameObjectB, eventData) {\r\n    const callbacks = map.get(objectA);\r\n    if (callbacks) {\r\n      callbacks.forEach(({ target, callback, context }) => {\r\n        if (!target || target === bodyB || target === gameObjectB) {\r\n          callback.call(context, eventData);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  subscribeMatterEvents() {\r\n    const matter = this.scene.matter;\r\n    if (!matter || !matter.world) {\r\n      logger.warn(\"Plugin requires matter!\");\r\n      return;\r\n    }\r\n    matter.world.on(\"collisionstart\", this.onCollisionStart);\r\n    matter.world.on(\"collisionactive\", this.onCollisionActive);\r\n    matter.world.on(\"collisionend\", this.onCollisionEnd);\r\n  }\r\n\r\n  unsubscribeMatterEvents() {\r\n    // Don't unsub if matter next existing or if the game is destroyed (since the matter world will\r\n    // be already gone)\r\n    const matter = this.scene.matter;\r\n    if (!matter || !matter.world) return;\r\n    matter.world.off(\"collisionstart\", this.onCollisionStart);\r\n    matter.world.off(\"collisionactive\", this.onCollisionActive);\r\n    matter.world.off(\"collisionend\", this.onCollisionEnd);\r\n  }\r\n\r\n  start() {\r\n    // If restarting, unsubscribe before resubscribing to ensure only one listener is added\r\n    this.scene.events.off(\"shutdown\", this.shutdown, this);\r\n    this.scene.events.on(\"shutdown\", this.shutdown, this);\r\n    this.subscribeMatterEvents();\r\n  }\r\n\r\n  shutdown() {\r\n    this.removeAllCollideListeners();\r\n    this.unsubscribeMatterEvents();\r\n    // Resubscribe to start so that the plugin is started again after Matter\r\n    this.scene.events.once(\"start\", this.start, this);\r\n  }\r\n\r\n  destroy() {\r\n    this.scene.events.off(\"start\", this.start, this);\r\n    this.scene.events.off(\"shutdown\", this.shutdown, this);\r\n    this.removeAllCollideListeners();\r\n    this.unsubscribeMatterEvents();\r\n    this.scene = undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * A valid physics-enabled game object, or just an object that has \"body\" property\r\n * @typedef {object} ObjectWithBody\r\n * @property {Matter.Body} body - A native Matter body\r\n */\r\n\r\n/**\r\n * A valid physics-enabled game object, or a native Matter body\r\n * @typedef {(Matter.Body|Phaser.Physics.Matter.Sprite|Phaser.Physics.Matter.Image|Phaser.Physics.Matter.MatterGameObject|Phaser.Tilemaps.Tile)} PhysicsObject\r\n */\r\n\r\n/**\r\n * This event proxies the Matter collisionstart event, which is fired when any bodies have started\r\n * colliding.\r\n *\r\n * @typedef {event} collisionstart\r\n * @property {object} event - The Matter event data, with the \"pairs\" property modified so that each\r\n * pair now has a gameObjectA and a gameObjectB property. Those properties will contain the game\r\n * object associated with the native bodyA or bodyB (or undefined if no game object exists).\r\n */\r\n\r\n/**\r\n * This event proxies the Matter collisionend event, which is fired when any bodies have stopped\r\n * colliding.\r\n *\r\n * @typedef {event} collisionend\r\n * @property {object} event - The Matter event data, with the \"pairs\" property modified so that each\r\n * pair now has a gameObjectA and a gameObjectB property. Those properties will contain the game\r\n * object associated with the native bodyA or bodyB (or undefined if no game object exists).\r\n */\r\n\r\n/**\r\n * This event proxies the Matter collisionactive event, which is fired when any bodies are still\r\n * colliding (after the tick of the engine where they started colliding).\r\n *\r\n * @typedef {event} collisionactive\r\n * @property {object} event - The Matter event data, with the \"pairs\" property modified so that each\r\n * pair now has a gameObjectA and a gameObjectB property. Those properties will contain the game\r\n * object associated with the native bodyA or bodyB (or undefined if no game object exists).\r\n */\r\n\r\n/**\r\n * This event is fired for each pair of bodies that collide during Matter's collisionstart.\r\n *\r\n * @typedef {event} paircollisionstart\r\n * @property {object} event\r\n * @property {object} event.bodyA - The native Matter bodyA from the pair\r\n * @property {object} event.bodyB - The native Matter bodyB from the pair\r\n * @property {object|undefined} event.gameObjectA - The game object associated with bodyA, if it exists\r\n * @property {object|undefined} event.gameObjectB - The game object associated with bodyB, if it exists\r\n * @property {object} event.pair - The original pair data from Matter\r\n */\r\n\r\n/**\r\n * This event is fired for each pair of bodies that collide during Matter's collisionend.\r\n *\r\n * @typedef {event} paircollisionend\r\n * @param {object} event\r\n * @param {object} event.bodyA - The native Matter bodyA from the pair\r\n * @param {object} event.bodyB - The native Matter bodyB from the pair\r\n * @param {object|undefined} event.gameObjectA - The game object associated with bodyA, if it exists\r\n * @param {object|undefined} event.gameObjectB - The game object associated with bodyB, if it exists\r\n * @param {object} event.pair - The original pair data from Matter\r\n */\r\n\r\n/**\r\n * This event is fired for each pair of bodies that collide during Matter's collisionactive.\r\n *\r\n * @typedef {event} paircollisionactive\r\n * @param {object} event\r\n * @param {object} event.bodyA - The native Matter bodyA from the pair\r\n * @param {object} event.bodyB - The native Matter bodyB from the pair\r\n * @param {object|undefined} event.gameObjectA - The game object associated with bodyA, if it exists\r\n * @param {object|undefined} event.gameObjectB - The game object associated with bodyB, if it exists\r\n * @param {object} event.pair - The original pair data from Matter\r\n */\r\n","import PhaserMatterCollisionPlugin from \"./phaser-matter-collision-plugin\";\r\n\r\nexport default PhaserMatterCollisionPlugin;\r\n"],"sourceRoot":""}