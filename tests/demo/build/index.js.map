{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./tests/demo/src/main-scene.js","webpack:///./tests/demo/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Phaser","Scene","this","load","tilemapTiledJSON","image","atlas","map","make","tilemap","tileset","addTilesetImage","groundLayer","createDynamicLayer","lavaLayer","setCollisionByProperty","collides","matter","world","convertTilemapLayer","image1","add","restitution","friction","shape","setScale","setData","image2","image3","graphics","M","Physics","Matter","compoundBody","Body","parts","Bodies","rectangle","forEach","part","label","fillStyle","fillRect","gameObject","setExistingBody","setPosition","matterCollision","addOnCollideStart","objectA","objectB","callback","pairData","console","log","gameObjectA","getData","gameObjectB","cameras","main","setBounds","widthInPixels","heightInPixels","cursors","input","keyboard","createCursorKeys","controlConfig","camera","left","right","up","down","speed","controls","Cameras","Controls","FixedKeyControl","time","delta","update","config","type","AUTO","width","height","backgroundColor","parent","pixelArt","scene","main_scene","physics","default","debug","plugins","plugin","PhaserMatterCollisionPlugin","mapping","start","Game"],"mappings":"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","file":"demo/build/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class MainScene extends Phaser.Scene {\r\n  preload() {\r\n    this.load.tilemapTiledJSON(\"map\", \"../assets/tilemaps/simple-map-collision-mapped.json\");\r\n    this.load.image(\r\n      \"kenney-tileset-64px-extruded\",\r\n      \"../assets/tilesets/kenney-tileset-64px-extruded.png\"\r\n    );\r\n    this.load.atlas(\"emoji\", \"../assets/atlases/emoji.png\", \"../assets/atlases/emoji.json\");\r\n  }\r\n\r\n  create() {\r\n    const map = this.make.tilemap({ key: \"map\" });\r\n    const tileset = map.addTilesetImage(\"kenney-tileset-64px-extruded\");\r\n    const groundLayer = map.createDynamicLayer(\"Ground\", tileset, 0, 0);\r\n    const lavaLayer = map.createDynamicLayer(\"Lava\", tileset, 0, 0);\r\n\r\n    groundLayer.setCollisionByProperty({ collides: true });\r\n    lavaLayer.setCollisionByProperty({ collides: true });\r\n\r\n    this.matter.world.convertTilemapLayer(groundLayer);\r\n    this.matter.world.convertTilemapLayer(lavaLayer);\r\n\r\n    const image1 = this.matter.add\r\n      .image(250, 50, \"emoji\", \"1f92c\", { restitution: 1, friction: 0, shape: \"circle\" })\r\n      .setScale(0.4)\r\n      .setData(\"name\", \"angry\");\r\n    const image2 = this.matter.add\r\n      .image(250, 150, \"emoji\", \"1f60d\", { restitution: 1, friction: 0, shape: \"circle\" })\r\n      .setScale(0.4)\r\n      .setData(\"name\", \"hearts\");\r\n    const image3 = this.matter.add\r\n      .image(250, 250, \"emoji\", \"1f4a9\", { restitution: 1, friction: 0, shape: \"circle\" })\r\n      .setScale(0.4)\r\n      .setData(\"name\", \"poop\");\r\n\r\n    const graphics = this.add.graphics().setData(\"name\", \"bars\");\r\n\r\n    const M = Phaser.Physics.Matter.Matter;\r\n    const compoundBody = M.Body.create({\r\n      parts: [\r\n        M.Bodies.rectangle(0, 0, 20, 200),\r\n        M.Bodies.rectangle(100, 0, 20, 200),\r\n        M.Bodies.rectangle(200, 0, 20, 200),\r\n        M.Bodies.rectangle(300, 0, 20, 200)\r\n      ]\r\n    });\r\n    this.matter.world.add(compoundBody);\r\n\r\n    compoundBody.parts.forEach((part, i) => {\r\n      if (i === 0) part.label = \"root\";\r\n      else part.label = \"bar \" + i;\r\n    });\r\n    graphics.fillStyle(0xff0000, 1);\r\n    graphics.fillRect(-160, -100, 20, 200);\r\n    graphics.fillRect(-60, -100, 20, 200);\r\n    graphics.fillRect(40, -100, 20, 200);\r\n    graphics.fillRect(140, -100, 20, 200);\r\n    this.matter.add\r\n      .gameObject(graphics)\r\n      .setExistingBody(compoundBody)\r\n      .setPosition(400, 0);\r\n\r\n    // All collision, with gameObjectA & gameObjectB installed on the pairs\r\n    // this.matterCollision.events.on(\"collisionstart\", event => {\r\n    //   console.log(event);\r\n    //   debugger;\r\n    // });\r\n    // this.matterCollision.events.on(\"collisionactive\", event => {\r\n    //   console.log(event);\r\n    //   debugger;\r\n    // });\r\n    // this.matterCollision.events.on(\"collisionend\", event => {\r\n    //   console.log(event);\r\n    //   debugger;\r\n    // });\r\n\r\n    // Called for each pair, with gameObjectA & gameObjectB in the pairData\r\n    // this.matterCollision.events.on(\"paircollisionstart\", pairData => {\r\n    //   console.log(pairData);\r\n    //   debugger;\r\n    // });\r\n    // this.matterCollision.events.on(\"paircollisionactive\", pairData => {\r\n    //   console.log(pairData);\r\n    //   debugger;\r\n    // });\r\n    // this.matterCollision.events.on(\"paircollisionend\", pairData => {\r\n    //   console.log(pairData);\r\n    //   debugger;\r\n    // });\r\n\r\n    this.matterCollision.addOnCollideStart({\r\n      objectA: image1,\r\n      objectB: [image2, image3],\r\n      callback: pairData => {\r\n        console.log(\r\n          `${pairData.gameObjectA.getData(\"name\")} emoji hit ${pairData.gameObjectB.getData(\r\n            \"name\"\r\n          )}`\r\n        );\r\n      }\r\n    });\r\n\r\n    this.matterCollision.addOnCollideStart({\r\n      objectA: image2,\r\n      objectB: image3,\r\n      callback: pairData => {\r\n        console.log(\r\n          `${pairData.gameObjectA.getData(\"name\")} emoji hit ${pairData.gameObjectB.getData(\r\n            \"name\"\r\n          )}`\r\n        );\r\n      }\r\n    });\r\n\r\n    // const extractName = (gameObject, body) => {\r\n    //   if (gameObject) {\r\n    //     if (gameObject.tile) return gameObject.tile.index;\r\n    //     else return gameObject.getData(\"name\");\r\n    //   } else {\r\n    //     return body.label;\r\n    //   }\r\n    // };\r\n    // this.matterCollision.events.on(\"collisionstart\", (bodyA, gameObjectA, bodyB, gameObjectB) => {\r\n    //   console.log(\r\n    //     `${extractName(gameObjectA, bodyA)} and ${extractName(gameObjectB, bodyB)} collided`\r\n    //   );\r\n    // });\r\n\r\n    this.cameras.main.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\r\n\r\n    const cursors = this.input.keyboard.createCursorKeys();\r\n    const controlConfig = {\r\n      camera: this.cameras.main,\r\n      left: cursors.left,\r\n      right: cursors.right,\r\n      up: cursors.up,\r\n      down: cursors.down,\r\n      speed: 0.5\r\n    };\r\n    this.controls = new Phaser.Cameras.Controls.FixedKeyControl(controlConfig);\r\n  }\r\n\r\n  update(time, delta) {\r\n    this.controls.update(delta);\r\n  }\r\n}\r\n","import MainScene from \"./main-scene.js\";\r\n\r\nconst config = {\r\n  type: Phaser.AUTO,\r\n  width: 800,\r\n  height: 600,\r\n  backgroundColor: \"#000c1f\",\r\n  parent: \"game-container\",\r\n  pixelArt: true,\r\n  scene: MainScene,\r\n  physics: {\r\n    default: \"matter\",\r\n    matter: {\r\n      debug: false\r\n    }\r\n  },\r\n  plugins: {\r\n    scene: [\r\n      {\r\n        key: \"MatterCollisionPlugin\",\r\n        plugin: PhaserMatterCollisionPlugin,\r\n        mapping: \"matterCollision\",\r\n        start: true\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst game = new Phaser.Game(config);\r\n"],"sourceRoot":""}