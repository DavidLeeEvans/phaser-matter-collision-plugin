{"version":3,"sources":["webpack://PhaserMatterCollisionPlugin/webpack/universalModuleDefinition","webpack://PhaserMatterCollisionPlugin/webpack/bootstrap","webpack://PhaserMatterCollisionPlugin/external {\"root\":\"Phaser\",\"commonjs\":\"phaser\",\"commonjs2\":\"phaser\",\"amd\":\"phaser\"}","webpack://PhaserMatterCollisionPlugin/./logger.js","webpack://PhaserMatterCollisionPlugin/./utils.js","webpack://PhaserMatterCollisionPlugin/./phaser-matter-collision-plugin.js","webpack://PhaserMatterCollisionPlugin/./index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","logger","log","console","warn","error","getRootBody","body","parent","isPhysicsObject","obj","isMatterBody","external_root_Phaser_commonjs_phaser_commonjs2_phaser_amd_phaser_default","a","Tilemaps","Tile","warnInvalidObject","MatterCollisionPlugin","scene","pluginManager","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","events","Events","EventEmitter","collisionStartListeners","Map","collisionEndListeners","collisionActiveListeners","onCollisionStart","onCollisionEvent","onCollisionEnd","onCollisionActive","on","start","once","destroy","Plugins","ScenePlugin","_ref","arguments","length","undefined","objectA","objectB","callback","context","addOnCollide","removeOnCollideStart","_ref2","removeOnCollideEnd","_ref3","removeOnCollideActive","_ref4","removeOnCollide","_ref5","_ref6","clear","removeAllCollideStartListeners","removeAllCollideActiveListeners","removeAllCollideEndListeners","removeCollideListenersOf","removeCollideStartListenersOf","removeCollideActiveListenersOf","removeCollideEndListenersOf","map","objects","Array","isArray","forEach","delete","callbacks","remainingCallbacks","filter","cb","includes","target","set","_this2","objectsA","objectsB","b","addOnCollideObjectVsObject","push","listenerMap","eventName","event","_this3","pairs","pairEventName","eventData","eventDataReversed","isReversed","pair","bodyA","bodyB","gameObjectA","gameObject","gameObjectB","tile","emit","size","checkPairAndEmit","_ref7","matter","world","off","shutdown","subscribeMatterEvents","removeAllCollideListeners","unsubscribeMatterEvents","__webpack_exports__"],"mappings":"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","file":"phaser-matter-collision-plugin.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"phaser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"phaser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhaserMatterCollisionPlugin\"] = factory(require(\"phaser\"));\n\telse\n\t\troot[\"PhaserMatterCollisionPlugin\"] = factory(root[\"Phaser\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","export default {\r\n  log: console.log,\r\n  warn: console.warn,\r\n  error: console.error\r\n};\r\n","import Phaser from \"phaser\";\r\nimport logger from \"./logger\";\r\n\r\n/**\r\n * Get the root body of a compound Matter body\r\n * @private\r\n */\r\nexport function getRootBody(body) {\r\n  while (body.parent !== body) body = body.parent;\r\n  return body;\r\n}\r\n\r\n/**\r\n * Duck type to check if the given object is a Matter body (because there isn't a prototype)\r\n * @private\r\n */\r\nexport function isMatterBody(obj) {\r\n  return (\r\n    obj.hasOwnProperty(\"collisionFilter\") &&\r\n    obj.hasOwnProperty(\"parts\") &&\r\n    obj.hasOwnProperty(\"slop\")\r\n  );\r\n}\r\n\r\n/**\r\n * Check if object is an acceptable physical object for this plugin - a Matter Body, a tile, or an\r\n * object with a body property\r\n * @private\r\n */\r\nexport function isPhysicsObject(obj) {\r\n  return isMatterBody(obj) || obj.body || obj instanceof Phaser.Tilemaps.Tile;\r\n}\r\n\r\n/** @private */\r\nexport function warnInvalidObject(obj) {\r\n  logger.warn(\r\n    `Expected a Matter body, Tile or an object with a body property, but instead, recieved: ${obj}`\r\n  );\r\n}\r\n","import Phaser from \"phaser\";\r\nimport { getRootBody, isPhysicsObject, warnInvalidObject } from \"./utils\";\r\nimport logger from \"./logger\";\r\n\r\n// TODO: add oncollide({event: \"...\"})\r\n\r\n/**\r\n * @export\r\n * @class MatterCollisionPlugin\r\n * @extends {Phaser.Plugins.ScenePlugin}\r\n */\r\nexport default class MatterCollisionPlugin extends Phaser.Plugins.ScenePlugin {\r\n  /**\r\n   * Creates an instance of MatterCollisionPlugin.\r\n   * @param {Phaser.Scene} scene\r\n   * @param {Phaser.Plugins.PluginManager} pluginManager\r\n   */\r\n  constructor(scene, pluginManager) {\r\n    super(scene, pluginManager);\r\n\r\n    this.scene = scene;\r\n\r\n    /**\r\n     * @type {Phaser.Events.EventEmitter}\r\n     * @emits {collisionstart}\r\n     * @emits {collisionactive}\r\n     * @emits {collisionend}\r\n     * @emits {paircollisionstart}\r\n     * @emits {paircollisionactive}\r\n     * @emits {paircollisionend}\r\n     */\r\n    this.events = new Phaser.Events.EventEmitter();\r\n\r\n    // Maps from objectA => {target?, callback, context?}\r\n    /** @private */\r\n    this.collisionStartListeners = new Map();\r\n    /** @private */\r\n    this.collisionEndListeners = new Map();\r\n    /** @private */\r\n    this.collisionActiveListeners = new Map();\r\n\r\n    /**\r\n     * @fires collisionstart\r\n     * @fires paircollisionstart\r\n     * @private\r\n     */\r\n    this.onCollisionStart = this.onCollisionEvent.bind(\r\n      this,\r\n      this.collisionStartListeners,\r\n      \"collisionstart\"\r\n    );\r\n\r\n    /**\r\n     * @fires collisionend\r\n     * @fires paircollisionend\r\n     * @private\r\n     */\r\n    this.onCollisionEnd = this.onCollisionEvent.bind(\r\n      this,\r\n      this.collisionEndListeners,\r\n      \"collisionend\"\r\n    );\r\n\r\n    /**\r\n     * @fires collisionactive\r\n     * @fires paircollisionactive\r\n     * @private\r\n     */\r\n    this.onCollisionActive = this.onCollisionEvent.bind(\r\n      this,\r\n      this.collisionActiveListeners,\r\n      \"collisionactive\"\r\n    );\r\n\r\n    this.scene.events.on(\"start\", this.start, this);\r\n    this.scene.events.once(\"destroy\", this.destroy, this);\r\n  }\r\n\r\n  /**\r\n   * Add a listener for collidestart events between objectA and objectB. The collidestart event is\r\n   * fired by Matter when two bodies start colliding within a tick of the engine. If objectB is\r\n   * omitted, any collisions with objectA will be passed along to the listener. See\r\n   * {@link paircollisionstart} for information on callback parameters.\r\n   *\r\n   * @param {object} options\r\n   * @param {PhysicsObject|ObjectWithBody} options.objectA - The first object to watch for in\r\n   * colliding pairs.\r\n   * @param {PhysicsObject|ObjectWithBody} [options.objectB] - Optional, the second object to watch\r\n   * for in colliding pairs. If not defined, all collisions with objectA will trigger the callback\r\n   * @param {function} options.callback - The function to be invoked on collision\r\n   * @param {any} [options.context] - The context to apply when invoking the callback.\r\n   * @returns {function} A function that can be invoked to unsubscribe the listener that was just\r\n   * added.\r\n   */\r\n  addOnCollideStart({ objectA, objectB, callback, context } = {}) {\r\n    this.addOnCollide(this.collisionStartListeners, objectA, objectB, callback, context);\r\n    return this.removeOnCollideStart.bind(this, { objectA, objectB, callback, context });\r\n  }\r\n\r\n  /**\r\n   * This method mirrors {@link MatterCollisionPlugin#addOnCollideStart}\r\n   * @param {object} options\r\n   */\r\n  addOnCollideEnd({ objectA, objectB, callback, context } = {}) {\r\n    this.addOnCollide(this.collisionEndListeners, objectA, objectB, callback, context);\r\n    return this.removeOnCollideEnd.bind(this, { objectA, objectB, callback, context });\r\n  }\r\n\r\n  /**\r\n   * This method mirrors {@link MatterCollisionPlugin#addOnCollideStart}\r\n   * @param {object} options\r\n   */\r\n  addOnCollideActive({ objectA, objectB, callback, context } = {}) {\r\n    this.addOnCollide(this.collisionActiveListeners, objectA, objectB, callback, context);\r\n    return this.removeOnCollideActive.bind(this, { objectA, objectB, callback, context });\r\n  }\r\n\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideStart that match the given options object\r\n   * parameter exactly. I.e. this will only remove the listener if the listener was added via\r\n   * addOnCollideStart with the same parameters.\r\n   *\r\n   * @param {object} options\r\n   * @param {PhysicsObject|ObjectWithBody} options.objectA - The first object to watch for in\r\n   * colliding pairs.\r\n   * @param {PhysicsObject|ObjectWithBody} options.objectB - the second object to watch for in\r\n   * colliding pairs. If not defined, all collisions with objectA will trigger the callback\r\n   * @param {function} options.callback - The function to be invoked on collision\r\n   * @param {[any]} options.context - The context to apply when invoking the callback.\r\n   * @returns {function} A function that can be invoked to unsubscribe the listener that was just\r\n   * added.\r\n   */\r\n  removeOnCollideStart({ objectA, objectB, callback, context } = {}) {\r\n    this.removeOnCollide(this.collisionStartListeners, objectA, objectB, callback, context);\r\n  }\r\n\r\n  /**\r\n   * This method mirrors {@link MatterCollisionPlugin#removeOnCollideStart}\r\n   * @param {object} options\r\n   */\r\n  removeOnCollideEnd({ objectA, objectB, callback, context } = {}) {\r\n    this.removeOnCollide(this.collisionEndListeners, objectA, objectB, callback, context);\r\n  }\r\n\r\n  /**\r\n   * This method mirrors {@link MatterCollisionPlugin#removeOnCollideStart}\r\n   * @param {object} options\r\n   */\r\n  removeOnCollideActive({ objectA, objectB, callback, context } = {}) {\r\n    this.removeOnCollide(this.collisionActiveListeners, objectA, objectB, callback, context);\r\n  }\r\n\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideStart.\r\n   */\r\n  removeAllCollideStartListeners() {\r\n    this.collisionStartListeners.clear();\r\n  }\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideActive.\r\n   */\r\n  removeAllCollideActiveListeners() {\r\n    this.collisionActiveListeners.clear();\r\n  }\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideEnd.\r\n   */\r\n  removeAllCollideEndListeners() {\r\n    this.collisionEndListeners.clear();\r\n  }\r\n  /**\r\n   * Remove any listeners that were added with addOnCollideStart, addOnCollideActive or\r\n   * addOnCollideEnd.\r\n   */\r\n  removeAllCollideListeners() {\r\n    this.removeAllCollideStartListeners();\r\n    this.removeAllCollideActiveListeners();\r\n    this.removeAllCollideEndListeners();\r\n  }\r\n\r\n  /**\r\n   * Remove addOnCollideStart listeners where the given object(s) was involved.\r\n   * @param {object[]|object} object - An object or array of objects\r\n   */\r\n  removeCollideStartListenersOf(object) {\r\n    this.removeCollideListenersOf(this.collisionStartListeners, object);\r\n  }\r\n\r\n  /**\r\n   * Remove addOnCollideActive listeners where the given object(s) was involved.\r\n   * @param {object[]|object} object - An object or array of objects\r\n   */\r\n  removeCollideActiveListenersOf(object) {\r\n    this.removeCollideListenersOf(this.collisionActiveListeners, object);\r\n  }\r\n\r\n  /**\r\n   * Remove addOnCollideEnd listeners where the given object(s) was involved.\r\n   * @param {object[]|object} object - An object or array of objects\r\n   */\r\n  removeCollideEndListenersOf(object) {\r\n    this.removeCollideListenersOf(this.collisionEndListeners, object);\r\n  }\r\n\r\n  /**\r\n   * Remove addOnCollideStart, addOnCollideActive & addOnCollideEnd listeners where the given\r\n   * object(s) was involved.\r\n   * @param {object[]|object} object - An object or array of objects\r\n   */\r\n  removeAllCollideListenersOf(object) {\r\n    this.removeCollideStartListenersOf(object);\r\n    this.removeCollideActiveListenersOf(object);\r\n    this.removeCollideEndListenersOf(object);\r\n  }\r\n\r\n  /** @private */\r\n  removeCollideListenersOf(map, object) {\r\n    const objects = Array.isArray(object) ? object : [object];\r\n    // Remove all places where the object is ObjectA in the collision pair\r\n    objects.forEach(obj => map.delete(obj));\r\n    // Remove all places where the object is ObjectB in the collision pair\r\n    map.forEach((callbacks, objectA) => {\r\n      const remainingCallbacks = callbacks.filter(cb => !objects.includes(cb.target));\r\n      if (remainingCallbacks.length > 0) map.set(objectA, remainingCallbacks);\r\n      else map.delete(objectA);\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  addOnCollide(map, objectA, objectB, callback, context) {\r\n    if (!callback || typeof callback !== \"function\") {\r\n      warn(`No valid callback specified. Received: ${callback}`);\r\n      return;\r\n    }\r\n    const objectsA = Array.isArray(objectA) ? objectA : [objectA];\r\n    const objectsB = Array.isArray(objectB) ? objectB : [objectB];\r\n    objectsA.forEach(a => {\r\n      objectsB.forEach(b => {\r\n        this.addOnCollideObjectVsObject(map, a, b, callback, context);\r\n      });\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  removeOnCollide(map, objectA, objectB, callback, context) {\r\n    const objectsA = Array.isArray(objectsA) ? objectA : [objectA];\r\n    const objectsB = Array.isArray(objectsB) ? objectB : [objectB];\r\n    objectsA.forEach(a => {\r\n      const callbacks = map.get(a) || [];\r\n      const remainingCallbacks = callbacks.filter(\r\n        cb => !(objectsB.includes(cb.target) && cb.callback === callback && cb.context === context)\r\n      );\r\n      if (remainingCallbacks.length > 0) map.set(a, remainingCallbacks);\r\n      else map.delete(a);\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  addOnCollideObjectVsObject(map, objectA, objectB, callback, context) {\r\n    // Can't do anything if the first object is not defined or invalid\r\n    if (!objectA || !isPhysicsObject(objectA)) {\r\n      warnInvalidObject(objectA);\r\n      return;\r\n    }\r\n\r\n    // The second object can be undefined or a valid body\r\n    if (objectB && !isPhysicsObject(objectB)) {\r\n      warnInvalidObject(objectA);\r\n      return;\r\n    }\r\n\r\n    const callbacks = map.get(objectA) || [];\r\n    callbacks.push({ target: objectB, callback, context });\r\n    map.set(objectA, callbacks);\r\n  }\r\n\r\n  /**\r\n   * Reusable handler for collisionstart, collisionend, collisionactive.\r\n   * @private\r\n   * */\r\n  onCollisionEvent(listenerMap, eventName, event) {\r\n    const pairs = event.pairs;\r\n    const pairEventName = \"pair\" + eventName;\r\n    const eventData = {};\r\n    const eventDataReversed = { isReversed: true };\r\n\r\n    pairs.map((pair, i) => {\r\n      const { bodyA, bodyB } = pair;\r\n\r\n      let gameObjectA = getRootBody(bodyA).gameObject;\r\n      let gameObjectB = getRootBody(bodyB).gameObject;\r\n\r\n      // Special case for tiles, where it's more useful to have a reference to the Tile object not\r\n      // the TileBody. This is hot code, so use a property check instead of instanceof.\r\n      if (gameObjectA && gameObjectA.tile) gameObjectA = gameObjectA.tile;\r\n      if (gameObjectB && gameObjectB.tile) gameObjectB = gameObjectB.tile;\r\n\r\n      pairs[i].gameObjectA = gameObjectA;\r\n      pairs[i].gameObjectB = gameObjectB;\r\n\r\n      eventData.bodyA = bodyA;\r\n      eventData.bodyB = bodyB;\r\n      eventData.gameObjectA = gameObjectA;\r\n      eventData.gameObjectB = gameObjectB;\r\n      eventData.pair = pair;\r\n\r\n      this.events.emit(pairEventName, eventData);\r\n\r\n      if (listenerMap.size) {\r\n        eventDataReversed.bodyB = bodyA;\r\n        eventDataReversed.bodyA = bodyB;\r\n        eventDataReversed.gameObjectB = gameObjectA;\r\n        eventDataReversed.gameObjectA = gameObjectB;\r\n        eventDataReversed.pair = pair;\r\n\r\n        this.checkPairAndEmit(listenerMap, bodyA, bodyB, gameObjectB, eventData);\r\n        this.checkPairAndEmit(listenerMap, bodyB, bodyA, gameObjectA, eventDataReversed);\r\n\r\n        if (gameObjectA) {\r\n          this.checkPairAndEmit(listenerMap, gameObjectA, bodyB, gameObjectB, eventData);\r\n        }\r\n        if (gameObjectB) {\r\n          this.checkPairAndEmit(listenerMap, gameObjectB, bodyA, gameObjectA, eventDataReversed);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.events.emit(eventName, event);\r\n  }\r\n\r\n  /** @private */\r\n  checkPairAndEmit(map, objectA, bodyB, gameObjectB, eventData) {\r\n    const callbacks = map.get(objectA);\r\n    if (callbacks) {\r\n      callbacks.forEach(({ target, callback, context }) => {\r\n        if (!target || target === bodyB || target === gameObjectB) {\r\n          callback.call(context, eventData);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  subscribeMatterEvents() {\r\n    const matter = this.scene.matter;\r\n    if (!matter || !matter.world) {\r\n      logger.warn(\"Plugin requires matter!\");\r\n      return;\r\n    }\r\n    matter.world.on(\"collisionstart\", this.onCollisionStart);\r\n    matter.world.on(\"collisionactive\", this.onCollisionActive);\r\n    matter.world.on(\"collisionend\", this.onCollisionEnd);\r\n  }\r\n\r\n  unsubscribeMatterEvents() {\r\n    // Don't unsub if matter next existing or if the game is destroyed (since the matter world will\r\n    // be already gone)\r\n    const matter = this.scene.matter;\r\n    if (!matter || !matter.world) return;\r\n    matter.world.off(\"collisionstart\", this.onCollisionStart);\r\n    matter.world.off(\"collisionactive\", this.onCollisionActive);\r\n    matter.world.off(\"collisionend\", this.onCollisionEnd);\r\n  }\r\n\r\n  start() {\r\n    // If restarting, unsubscribe before resubscribing to ensure only one listener is added\r\n    this.scene.events.off(\"shutdown\", this.shutdown, this);\r\n    this.scene.events.on(\"shutdown\", this.shutdown, this);\r\n    this.subscribeMatterEvents();\r\n  }\r\n\r\n  shutdown() {\r\n    this.removeAllCollideListeners();\r\n    this.unsubscribeMatterEvents();\r\n  }\r\n\r\n  destroy() {\r\n    this.scene.events.off(\"start\", this.start, this);\r\n    this.scene.events.off(\"shutdown\", this.shutdown, this);\r\n    this.removeAllCollideListeners();\r\n    this.unsubscribeMatterEvents();\r\n    this.scene = undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * A valid physics-enabled game object, or just an object that has \"body\" property\r\n * @typedef {object} ObjectWithBody\r\n * @property {Matter.Body} body - A native Matter body\r\n */\r\n\r\n/**\r\n * A valid physics-enabled game object, or a native Matter body\r\n * @typedef {(Matter.Body|Phaser.Physics.Matter.Sprite|Phaser.Physics.Matter.Image|Phaser.Physics.Matter.MatterGameObject|Phaser.Tilemaps.Tile)} PhysicsObject\r\n */\r\n\r\n/**\r\n * This event proxies the Matter collisionstart event, which is fired when any bodies have started\r\n * colliding.\r\n *\r\n * @typedef {event} collisionstart\r\n * @property {object} event - The Matter event data, with the \"pairs\" property modified so that each\r\n * pair now has a gameObjectA and a gameObjectB property. Those properties will contain the game\r\n * object associated with the native bodyA or bodyB (or undefined if no game object exists).\r\n */\r\n\r\n/**\r\n * This event proxies the Matter collisionend event, which is fired when any bodies have stopped\r\n * colliding.\r\n *\r\n * @typedef {event} collisionend\r\n * @property {object} event - The Matter event data, with the \"pairs\" property modified so that each\r\n * pair now has a gameObjectA and a gameObjectB property. Those properties will contain the game\r\n * object associated with the native bodyA or bodyB (or undefined if no game object exists).\r\n */\r\n\r\n/**\r\n * This event proxies the Matter collisionactive event, which is fired when any bodies are still\r\n * colliding (after the tick of the engine where they started colliding).\r\n *\r\n * @typedef {event} collisionactive\r\n * @property {object} event - The Matter event data, with the \"pairs\" property modified so that each\r\n * pair now has a gameObjectA and a gameObjectB property. Those properties will contain the game\r\n * object associated with the native bodyA or bodyB (or undefined if no game object exists).\r\n */\r\n\r\n/**\r\n * This event is fired for each pair of bodies that collide during Matter's collisionstart.\r\n *\r\n * @typedef {event} paircollisionstart\r\n * @property {object} event\r\n * @property {object} event.bodyA - The native Matter bodyA from the pair\r\n * @property {object} event.bodyB - The native Matter bodyB from the pair\r\n * @property {object|undefined} event.gameObjectA - The game object associated with bodyA, if it exists\r\n * @property {object|undefined} event.gameObjectB - The game object associated with bodyB, if it exists\r\n * @property {object} event.pair - The original pair data from Matter\r\n */\r\n\r\n/**\r\n * This event is fired for each pair of bodies that collide during Matter's collisionend.\r\n *\r\n * @typedef {event} paircollisionend\r\n * @param {object} event\r\n * @param {object} event.bodyA - The native Matter bodyA from the pair\r\n * @param {object} event.bodyB - The native Matter bodyB from the pair\r\n * @param {object|undefined} event.gameObjectA - The game object associated with bodyA, if it exists\r\n * @param {object|undefined} event.gameObjectB - The game object associated with bodyB, if it exists\r\n * @param {object} event.pair - The original pair data from Matter\r\n */\r\n\r\n/**\r\n * This event is fired for each pair of bodies that collide during Matter's collisionactive.\r\n *\r\n * @typedef {event} paircollisionactive\r\n * @param {object} event\r\n * @param {object} event.bodyA - The native Matter bodyA from the pair\r\n * @param {object} event.bodyB - The native Matter bodyB from the pair\r\n * @param {object|undefined} event.gameObjectA - The game object associated with bodyA, if it exists\r\n * @param {object|undefined} event.gameObjectB - The game object associated with bodyB, if it exists\r\n * @param {object} event.pair - The original pair data from Matter\r\n */\r\n","import PhaserMatterCollisionPlugin from \"./phaser-matter-collision-plugin\";\r\n\r\nexport default PhaserMatterCollisionPlugin;\r\n"],"sourceRoot":""}